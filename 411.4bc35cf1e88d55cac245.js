(self.webpackChunk=self.webpackChunk||[]).push([[411],{411:function(n,s,e){"use strict";e.r(s),s.default='<p><code>mode</code> 옵션을 사용하면 webpack에 내장된 최적화 기능을 사용할 수 있습니다.</p> <p><code>string = \'production\': \'none\' | \'development\' | \'production\'</code></p> <h2 id="usage">Usage<a href="#usage" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h2> <p>설정에서 <code>mode</code> 옵션을 사용합니다.</p> <pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  mode<span class="token operator">:</span> <span class="token string">\'development\'</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> <p>혹은 <a href="/api/cli/">CLI</a>의 인수로 전달합니다.</p> <pre><code class="hljs language-bash">webpack --mode<span class="token operator">=</span>development</code></pre> <p>지원되는 문자열 값은 다음과 같습니다.</p> <table> <thead> <tr> <th>옵션</th> <th>설명</th> </tr> </thead> <tbody> <tr> <td data-th="옵션"><span><code>development</code></span></td> <td data-th="설명"><span><code>DefinePlugin</code>의 <code>process.env.NODE_ENV</code>를 <code>development</code>로 설정합니다. 모듈과 청크에 유용한 이름을 사용할 수 있습니다.</span></td> </tr> <tr> <td data-th="옵션"><span><code>production</code></span></td> <td data-th="설명"><span><code>DefinePlugin</code>의 <code>process.env.NODE_ENV</code>를 <code>production</code>으로 설정합니다. 모듈과 청크, <code>FlagDependencyUsagePlugin</code>, <code>FlagIncludedChunksPlugin</code>, <code>ModuleConcatenationPlugin</code>, <code>NoEmitOnErrorsPlugin</code>,<code>TerserPlugin</code> 등에 대해 결정적 망글이름(mangled name)을 사용할 수 있습니다.</span></td> </tr> <tr> <td data-th="옵션"><span><code>none</code></span></td> <td data-th="설명"><span>기본 최적화 옵션에서 제외</span></td> </tr> </tbody> </table> <p>설정되지 않은 경우, webpack은 <code>production</code>을 <code>mode</code>의 기본값으로 설정합니다.</p> <aside class="tip"><h6 class="tip__prefix">tip</h6><p>설정이나 CLI를 통해 <code>mode</code>가 제공되지 않으면 CLI는 <code>mode</code>에 유효한 <code>NODE_ENV</code> 값을 사용합니다.</p></aside> <h3 id="mode-development">Mode: development<a href="#mode-development" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <pre><code class="hljs language-diff">// webpack.development.config.js\nmodule.exports = {\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> mode: \'development\'\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> devtool: \'eval\',\n</span><span class="token prefix deleted">-</span><span class="token line"> cache: true,\n</span><span class="token prefix deleted">-</span><span class="token line"> performance: {\n</span><span class="token prefix deleted">-</span><span class="token line">   hints: false\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> output: {\n</span><span class="token prefix deleted">-</span><span class="token line">   pathinfo: true\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> optimization: {\n</span><span class="token prefix deleted">-</span><span class="token line">   moduleIds: \'named\',\n</span><span class="token prefix deleted">-</span><span class="token line">   chunkIds: \'named\',\n</span><span class="token prefix deleted">-</span><span class="token line">   mangleExports: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   nodeEnv: \'development\',\n</span><span class="token prefix deleted">-</span><span class="token line">   flagIncludedChunks: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   occurrenceOrder: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   concatenateModules: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   splitChunks: {\n</span><span class="token prefix deleted">-</span><span class="token line">     hidePathInfo: false,\n</span><span class="token prefix deleted">-</span><span class="token line">     minSize: 10000,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxAsyncRequests: Infinity,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxInitialRequests: Infinity,\n</span><span class="token prefix deleted">-</span><span class="token line">   },\n</span><span class="token prefix deleted">-</span><span class="token line">   emitOnErrors: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   checkWasmTypes: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   minimize: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   removeAvailableModules: false\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> plugins: [\n</span><span class="token prefix deleted">-</span><span class="token line">   new webpack.DefinePlugin({ "process.env.NODE_ENV": JSON.stringify("development") }),\n</span><span class="token prefix deleted">-</span><span class="token line"> ]\n</span></span>}</code></pre> <h3 id="mode-production">Mode: production<a href="#mode-production" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <pre><code class="hljs language-diff">// webpack.production.config.js\nmodule.exports = {\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">  mode: \'production\',\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> performance: {\n</span><span class="token prefix deleted">-</span><span class="token line">   hints: \'warning\'\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> output: {\n</span><span class="token prefix deleted">-</span><span class="token line">   pathinfo: false\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> optimization: {\n</span><span class="token prefix deleted">-</span><span class="token line">   moduleIds: \'deterministic\',\n</span><span class="token prefix deleted">-</span><span class="token line">   chunkIds: \'deterministic\',\n</span><span class="token prefix deleted">-</span><span class="token line">   mangleExports: \'deterministic\',\n</span><span class="token prefix deleted">-</span><span class="token line">   nodeEnv: \'production\',\n</span><span class="token prefix deleted">-</span><span class="token line">   flagIncludedChunks: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   occurrenceOrder: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   concatenateModules: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   splitChunks: {\n</span><span class="token prefix deleted">-</span><span class="token line">     hidePathInfo: true,\n</span><span class="token prefix deleted">-</span><span class="token line">     minSize: 30000,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxAsyncRequests: 5,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxInitialRequests: 3,\n</span><span class="token prefix deleted">-</span><span class="token line">   },\n</span><span class="token prefix deleted">-</span><span class="token line">   emitOnErrors: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   checkWasmTypes: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   minimize: true,\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> plugins: [\n</span><span class="token prefix deleted">-</span><span class="token line">   new TerserPlugin(/* ... */),\n</span><span class="token prefix deleted">-</span><span class="token line">   new webpack.DefinePlugin({ "process.env.NODE_ENV": JSON.stringify("production") }),\n</span><span class="token prefix deleted">-</span><span class="token line">   new webpack.optimize.ModuleConcatenationPlugin(),\n</span><span class="token prefix deleted">-</span><span class="token line">   new webpack.NoEmitOnErrorsPlugin()\n</span><span class="token prefix deleted">-</span><span class="token line"> ]\n</span></span>}</code></pre> <h3 id="mode-none">Mode: none<a href="#mode-none" aria-hidden="true" tabindex="-1"><span class="header-link"></span></a></h3> <pre><code class="hljs language-diff">// webpack.custom.config.js\nmodule.exports = {\n<span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> mode: \'none\',\n</span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> performance: {\n</span><span class="token prefix deleted">-</span><span class="token line">  hints: false\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> optimization: {\n</span><span class="token prefix deleted">-</span><span class="token line">   flagIncludedChunks: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   occurrenceOrder: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   concatenateModules: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   splitChunks: {\n</span><span class="token prefix deleted">-</span><span class="token line">     hidePathInfo: false,\n</span><span class="token prefix deleted">-</span><span class="token line">     minSize: 10000,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxAsyncRequests: Infinity,\n</span><span class="token prefix deleted">-</span><span class="token line">     maxInitialRequests: Infinity,\n</span><span class="token prefix deleted">-</span><span class="token line">   },\n</span><span class="token prefix deleted">-</span><span class="token line">   emitOnErrors: true,\n</span><span class="token prefix deleted">-</span><span class="token line">   checkWasmTypes: false,\n</span><span class="token prefix deleted">-</span><span class="token line">   minimize: false,\n</span><span class="token prefix deleted">-</span><span class="token line"> },\n</span><span class="token prefix deleted">-</span><span class="token line"> plugins: []\n</span></span>}</code></pre> <p><em>webpack.config.js</em> 안의 <strong>mode</strong> 변수에 따라 동작을 변경하려면, 객체 대신 함수를 export 해야 합니다.</p> <pre><code class="hljs language-javascript"><span class="token keyword">var</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>\n  entry<span class="token operator">:</span> <span class="token string">\'./app.js\'</span><span class="token punctuation">,</span>\n  <span class="token comment">//...</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nmodule<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">env<span class="token punctuation">,</span> argv</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>argv<span class="token punctuation">.</span>mode <span class="token operator">===</span> <span class="token string">\'development\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    config<span class="token punctuation">.</span>devtool <span class="token operator">=</span> <span class="token string">\'source-map\'</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">if</span> <span class="token punctuation">(</span>argv<span class="token punctuation">.</span>mode <span class="token operator">===</span> <span class="token string">\'production\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n  <span class="token punctuation">}</span>\n\n  <span class="token keyword">return</span> config<span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre> '}}]);